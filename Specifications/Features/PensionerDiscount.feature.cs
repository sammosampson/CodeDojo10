// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.3.0
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Gym.Specifications.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.3.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PensionerDiscountFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PensionerDiscount.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PensionerDiscount", "In order to attract more members\r\nAs a gym marketing person\r\nI want to allow anyo" +
                    "ne over 65 who joins a 10% discount", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "PensionerDiscount")))
            {
                Gym.Specifications.Features.PensionerDiscountFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Joining as an over 65 year old creates membership with discounted membership fees" +
            " setup")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PensionerDiscount")]
        public virtual void JoiningAsAnOver65YearOldCreatesMembershipWithDiscountedMembershipFeesSetup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Joining as an over 65 year old creates membership with discounted membership fees" +
                    " setup", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("the date is \'2010-01-01\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And("a promotion is setup for the over 65\'s at a discount of 10%", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Date of birth"});
            table1.AddRow(new string[] {
                        "1",
                        "1944-12-31"});
#line 9
 testRunner.When("I join the gym stating the following details:", ((string)(null)), table1, "When ");
#line 12
 testRunner.Then("a gym membership should have been created with an id of 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "payment date",
                        "value £"});
            table2.AddRow(new string[] {
                        "2010-02-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-03-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-04-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-05-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-06-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-07-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-08-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-09-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-10-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-11-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2010-12-01",
                        "45"});
            table2.AddRow(new string[] {
                        "2011-01-01",
                        "45"});
#line 13
 testRunner.And("the account for the membership 1 should have the following debits:", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
